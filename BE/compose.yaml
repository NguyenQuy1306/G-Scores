version: '1.0'
services:
  gscore_spring_app:
    image: 'gscore_spring_app:latest'
    build: .
    container_name: gscore_spring_app
    ports:
      - "8080:8080"
    develop:
      watch:
        - action: rebuild
          path: ./src
        - action: rebuild
          path: ./pom.xml
    volumes:
      - ./src:/app/src
      - ./target:/app/target
      - ./logs:/app/logs
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/gscore
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=Ngocquynguyen1
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PORT=6379
      - SPRING_AUTOCONFIGURE_EXCLUDE=org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration
      - SPRING_CACHE_REDIS_TIME_TO_LIVE=300000
      - SPRING_CACHE_REDIS_CACHE_NULL_VALUES=false
      - SPRING_DATA_REDIS_TIMEOUT=60000
      - SPRING_CACHE_CACHE_NAMES=scores
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    networks:
      - gscore

  db:
    image: 'postgres:15'
    container_name: db
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=Ngocquynguyen1
      - POSTGRES_DB=gscore
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - gscore


  redis:
    image: 'redis:latest'
    container_name: redis_cache
    restart: always
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    command: [ "redis-server", "--save", "60", "1", "--loglevel", "warning" ]
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - gscore

volumes:
  postgres-data:
  redis-data:

networks:
  gscore:
    driver: bridge
